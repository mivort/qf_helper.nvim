*qf_helper.txt*
*qf_helper*
===============================================================================
CONTENTS                                                     *qf_helper-contents*

    1. Commands....................................|qf_helper-commands|
    1. Functions...................................|qf_helper-functions|

===============================================================================
COMMANDS                                                      *qf_helper-commads*

                                                                         *:QNext*
:[count]QNext[!]
    Go to next quickfix or loclist entry, choosing based on which is non-empty
    and which is open. Uses `prefer_loclist` option to tiebreak.

                                                                         *:QPrev*
:[count]QPrev[!]
    Go to previous quickfix or loclist entry, choosing based on which is
    non-empty and which is open. Uses `prefer_loclist` option to tiebreak.

                                                                        *:QFNext*
:[count]QFNext[!]
    Same as |cnext|, but wraps at the end of the list

                                                                        *:QFPrev*
:[count]QFPrev[!]
    Same as |cprev|, but wraps at the beginning of the list

                                                                        *:LLNext*
:[count]LLNext[!]
    Same as |lnext|, but wraps at the end of the list

                                                                        *:LLPrev*
:[count]LLPrev[!]
    Same as |lprev|, but wraps at the beginning of the list

                                                                        *:QFOpen*
:[count]QFOpen[!]
    Same as |copen|, but dynamically sizes the window. With [!] cursor stays
    in current window.

                                                                        *:LLOpen*
:[count]LLOpen[!]
    Same as |lopen|, but dynamically sizes the window. With [!] cursor stays
    in current window.

                                                                      *:QFToggle*
:[count]QFToggle[!]
    Open or close the quickfix window. With [!] cursor stays in current window.

                                                                      *:LLToggle*
:[count]LLToggle[!]
    Open or close the loclist window. With [!] cursor stays in current window.

===============================================================================
FUNCTIONS                                                   *qf_helper-functions*

qf_helper.setup([{opts}])                                     *qf_helper.setup()*
    Set up and configure qf_helper. Valid values for {opts} are listed in the
    |qf_helper-configure| section.

qf_helper.open({qftype}, [{opts}])                             *qf_helper.open()*
    Open the quickfix or loclist window. {qftype} should either be "c" for
    quickfix or "l" for loclist. {opts} is a table that can have any of the
    following entries:
        enter        If `true`, jump to the buffer after opening. Default `false`.
        height       Open the window with a specific height.

qf_helper.toggle({qftype}, [{opts}])                         *qf_helper.toggle()*
    Open the quickfix or loclist window. If it is already open, close it. See
    |qf_helper.open()| for {qftype} and {opts}.

qf_helper.close({qftype})                                     *qf_helper.close()*
    Close the quickfix or loclist window if they are open. See
    |qf_helper.open()| for {qftype}.

qf_helper.navigate({steps}, [{opts}])                      *qf_helper.navigate()*
    Jump to the next/previous quickfix or loclist entry. {steps} configures
    how many entries to move forward/backward (use negative to go backwards).
    {opts} is a table that can have any of the following entries:
        qftype       Use "c" or "l" to specify the quickfix or loclist.
                     Default behavior will choose whichever one is populated
                     or is visible. Ties are broken by the `prefer_loclist`
                     option.
        wrap         Wrap when reaching the beginning/end. Default `true`.
        by_file      If `true` jump to the next/prev entry in a different
                     file. Default `false`.

    Note that if `by_file` is `true`, {steps} will be converted to +/-1.

vim:ft=help:et:ts=2:sw=2:sts=2:norl

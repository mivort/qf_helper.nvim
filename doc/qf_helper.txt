*qf_helper.txt*
*qf_helper*
===============================================================================
CONTENTS                                                     *qf_helper-contents*

    1. Configure.......................................|qf_helper-intro|
    2. Bindings.....................................|qf_helper-bindings|
    3. Functions...................................|qf_helper-functions|

===============================================================================
CONFIGURE                                                   *qf_helper-configure*

To get started with the default options (in lua)

    require'qf_helper'.setup()

Recommended keybindings

    " use <C-N> and <C-P> for next/prev
    nnoremap <silent> <C-N> <cmd>lua require'qf_helper'.navigate(1)<CR>
    nnoremap <silent> <C-P> <cmd>lua require'qf_helper'.navigate(-1)<CR>
    " toggle the quickfix open/closed without jumping to it
    nnoremap <silent> <leader>q <cmd>lua require'qf_helper'.toggle('c')<CR>
    nnoremap <silent> <leader>l <cmd>lua require'qf_helper'.toggle('l')<CR>

To customize the default behavior

    require'qf_helper'.setup({
      -- Breaks ties for ambiguous |qf_helper.navigate()| command
      prefer_loclist = true,

      -- Sort diagnostic results from |lsp-diagnostic|. This is useful if you
      -- want to use `track_location` below and your LSP server returns results
      -- that are out-of-order.
      sort_lsp_diagnostics = true,

      quickfix = {
        autoclose = true,          -- Autoclose qf if it's the only open window
        default_bindings = true,   -- See |qf_helper-bindings|
        default_options = true,    -- Set recommended buffer and window options
        max_height = 10,           -- Max qf height when using open() or toggle()
        min_height = 1,            -- Min qf height when using open() or toggle()
        track_location = true,     -- Keep qf updated with your current location
      },
      loclist = {                  -- The same options, but for the loclist
        autoclose = true,
        default_bindings = true,
        default_options = true,
        max_height = 10,
        min_height = 1,
        track_location = true,
      },
    })

===============================================================================
BINDINGS                                                     *qf_helper-bindings*

If `default_bindings` is `true`, the following keybindings are set in the
quickfix/loclist buffer:

<C-t> open in a new tab
<C-s> open in a horizontal split
<C-v> open in a vertical split
<C-p> open the entry but keep the cursor in the quickfix window
<C-k> scroll up and open entry while keeping the cursor in the quickfix window
<C-j> scroll down and open entry while keeping the cursor in the quickfix window
{     scroll up to the previous file
}     scroll down to the next file

===============================================================================
FUNCTIONS                                                   *qf_helper-functions*

qf_helper.setup([{opts}])                                     *qf_helper.setup()*
    Set up and configure qf_helper. Valid values for {opts} are listed in the
    |qf_helper-configure| section.

qf_helper.open({qftype}, [{opts}])                             *qf_helper.open()*
    Open the quickfix or loclist window. {qftype} should either be "c" for
    quickfix or "l" for loclist. {opts} is a table that can have any of the
    following entries:
        enter        If `true`, jump to the buffer after opening. Default `false`.
        height       Open the window with a specific height.

qf_helper.toggle({qftype}, [{opts}])                         *qf_helper.toggle()*
    Open the quickfix or loclist window. If it is already open, close it. See
    |qf_helper.open()| for {qftype} and {opts}.

qf_helper.close({qftype})                                     *qf_helper.close()*
    Close the quickfix or loclist window if they are open. See
    |qf_helper.open()| for {qftype}.

qf_helper.navigate({steps}, [{opts}])                      *qf_helper.navigate()*
    Jump to the next/previous quickfix or loclist entry. {steps} configures
    how many entries to move forward/backward (use negative to go backwards).
    {opts} is a table that can have any of the following entries:
        qftype       Use "c" or "l" to specify the quickfix or loclist.
                     Default behavior will choose whichever one is populated
                     or is visible. Ties are broken by the `prefer_loclist`
                     option.
        wrap         Wrap when reaching the beginning/end. Default `true`.
        by_file      If `true` jump to the next/prev entry in a different
                     file. Default `false`.

    Note that if `by_file` is `true`, {steps} will be converted to +/-1.

vim:ft=help:et:ts=2:sw=2:sts=2:norl
